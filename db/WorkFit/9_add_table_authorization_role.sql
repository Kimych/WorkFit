SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

CREATE TABLE IF NOT EXISTS `workfit`.`role` (
  `NAME` VARCHAR(45) NOT NULL,
  `ROLE_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPTION` VARCHAR(200) NULL DEFAULT NULL,
  PRIMARY KEY (`ROLE_ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;

CREATE TABLE IF NOT EXISTS `workfit`.`authorization` (
  `AUTHORIZATION_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `LOGIN` VARCHAR(30) NOT NULL,
  `PASSWORD` VARCHAR(30) NOT NULL,
  `EMAIL` VARCHAR(30) NULL DEFAULT NULL,
  `WORKER_ID` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`AUTHORIZATION_ID`),
  INDEX `fk_authorization_worker1_idx` (`WORKER_ID` ASC),
  CONSTRAINT `fk_authorization_worker1`
    FOREIGN KEY (`WORKER_ID`)
    REFERENCES `workfit`.`worker` (`WORKER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;

CREATE TABLE IF NOT EXISTS `workfit`.`authorization_to_role` (
  `AUTHORIZATION_ID` INT(11) NOT NULL,
  `ROLE_ID` INT(11) NOT NULL,
  INDEX `fk_autorization_to_role_authorization1_idx` (`AUTHORIZATION_ID` ASC),
  INDEX `fk_autorization_to_role_role1_idx` (`ROLE_ID` ASC),
  CONSTRAINT `fk_autorization_to_role_authorization1`
    FOREIGN KEY (`AUTHORIZATION_ID`)
    REFERENCES `workfit`.`authorization` (`AUTHORIZATION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_autorization_to_role_role1`
    FOREIGN KEY (`ROLE_ID`)
    REFERENCES `workfit`.`role` (`ROLE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
